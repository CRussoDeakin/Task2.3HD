pipeline {
    agent any
    environment {
        TESTING_ENVIRONMENT = "TASK6.2C-CRUSSO"
    }
    stages {
        stage("Build") {
            steps {
                // Build the code using Maven to compile and package the code.
                echo 'mvn clean package'
            }
        }
        stage("Unit and Integration Tests") {
            steps {
                // Run unit tests using JUnit.
                echo 'mvn test'
                // Run integration tests using Selenium.
                echo 'mvn integration-test'
            }
            post {
                always {
                    // Send notification email with Unit and Integration Tests results and logs as attachment
                    emailext (
                        subject: "Unit and Integration Tests: ${TESTING_ENVIRONMENT}",
                        body: "See attached log file for more details from CRussoDeakin.",
                        attachmentsPattern: '**/*.log',
                        to: 'csrusso13@gmail.com'        
                    )
                }
            }
        }        
        stage("Code Analysis") {
            steps {
                // Integrate a code analysis tool to analyse the code and ensure it meets industry standards.
                // Use Jenkins plugin for SonarQube.
                echo 'mvn sonar:sonar'
            }    
        }
        stage("Security Scan") {
            steps {
                // Perform a security scan on the code using Snyk.
                echo 'snyk test'
            }
            post {
                always {
                    // Send notification email with Unit and Integration Tests results and logs as attachment
                    emailext (
                        subject: "Security Scan: ${TESTING_ENVIRONMENT}",
                        body: "See attached log file for more details from CRussoDeakin.",
                        attachmentsPattern: '**/*.log',
                        to: 'csrusso13@gmail.com'        
                    )
                }
            }
        }         
        stage("Deploy to Staging") {
            steps {
                // Deploy the application to a staging server using AWS EC2 instance.
                echo 'aws s3 sync ./dist s3://CRussoDeakin-staging-bucket'
            }
        }
        stage("Integration Tests on Staging") {
            steps {
                // Run integration tests on the staging server using Selenium.
                echo 'mvn integration-test -Denv=staging'
            }
        }
        stage("Deploy to Production") {
            steps {
                // Deploy the application to production using AWS EC2 instance.
                echo 'aws s3 sync ./dist s3://CRussoDeakin-production-bucket'
            }
        }
    }
}